//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CINEMA_BE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QL_RCP_Entities : DbContext
    {
        public QL_RCP_Entities()
            : base("name=QL_RCP_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<actor> actors { get; set; }
        public virtual DbSet<director> directors { get; set; }
        public virtual DbSet<genre> genres { get; set; }
        public virtual DbSet<cinema> cinemas { get; set; }
        public virtual DbSet<customer> customers { get; set; }
        public virtual DbSet<foods_drinks> foods_drinks { get; set; }
        public virtual DbSet<movy> movies { get; set; }
        public virtual DbSet<problem> problems { get; set; }
        public virtual DbSet<screen_rooms> screen_rooms { get; set; }
        public virtual DbSet<screen_rooms_seats> screen_rooms_seats { get; set; }
        public virtual DbSet<seat> seats { get; set; }
        public virtual DbSet<show_times> show_times { get; set; }
        public virtual DbSet<staff> staffs { get; set; }
        public virtual DbSet<transaction> transactions { get; set; }
        public virtual DbSet<transactions_foods_drinks> transactions_foods_drinks { get; set; }
        public virtual DbSet<voucher_uses> voucher_uses { get; set; }
        public virtual DbSet<voucher> vouchers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<ticket> tickets { get; set; }
    
        public virtual ObjectResult<GetMovieShowtimes_Result> GetMovieShowtimes(Nullable<int> movieId, string cityName, string cinemaName)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("movieId", movieId) :
                new ObjectParameter("movieId", typeof(int));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            var cinemaNameParameter = cinemaName != null ?
                new ObjectParameter("cinemaName", cinemaName) :
                new ObjectParameter("cinemaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMovieShowtimes_Result>("GetMovieShowtimes", movieIdParameter, cityNameParameter, cinemaNameParameter);
        }
    
        public virtual ObjectResult<GetMovieShowtimes1_Result> GetMovieShowtimes1(Nullable<int> movieId, string cityName, string cinemaName)
        {
            var movieIdParameter = movieId.HasValue ?
                new ObjectParameter("movieId", movieId) :
                new ObjectParameter("movieId", typeof(int));
    
            var cityNameParameter = cityName != null ?
                new ObjectParameter("cityName", cityName) :
                new ObjectParameter("cityName", typeof(string));
    
            var cinemaNameParameter = cinemaName != null ?
                new ObjectParameter("cinemaName", cinemaName) :
                new ObjectParameter("cinemaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMovieShowtimes1_Result>("GetMovieShowtimes1", movieIdParameter, cityNameParameter, cinemaNameParameter);
        }
    
        public virtual ObjectResult<GetMoviesByType_Result> GetMoviesByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMoviesByType_Result>("GetMoviesByType");
        }
    }
}
